{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","title","marginRight","list","display","flexDirection","padding","Navbar","classes","position","Toolbar","Typography","variant","color","noWrap","className","List","ListItem","button","component","NavLink","to","exact","ListItemText","primary","AlertContext","createContext","GithubContext","theme","root","width","margin","Search","useState","value","setValue","alert","useContext","github","onSubmit","event","preventDefault","Input","placeholder","fullWidth","onChange","target","onKeyPress","key","clearUsers","trim","hide","search","show","cardGrid","paddingTop","spacing","paddingBottom","card","height","cardMedia","cardContent","flexGrow","Cardd","user","Card","CardMedia","image","avatar_url","login","CardContent","gutterBottom","CardActions","Button","Link","Home","loading","users","Container","maxWidth","Grid","container","CircularProgress","size","style","map","item","xs","sm","md","id","About","Fragment","CssBaseline","backgroundColor","marginTop","justifyContent","alignItems","Repos","repos","repo","href","html_url","name","media","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","Chip","label","Alertt","Alert","onClose","severity","text","handlers","state","action","payload","alertReducer","type","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","basename","path","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ee9beef.chunk.js","sourcesContent":["import React from 'react'\r\nimport Appbar from '@material-ui/core/AppBar'\r\nimport { Toolbar, Typography, makeStyles, ListItem, ListItemText, List } from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    marginRight: 20\r\n  },\r\n  list: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 0,\r\n  }\r\n})\r\n\r\nexport const Navbar = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Appbar position=\"relative\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          Github Search\r\n        </Typography>\r\n        <List className={classes.list}>\r\n          <ListItem button component={NavLink} to='/' exact>\r\n            <ListItemText primary=\"Home page\" />\r\n          </ListItem>\r\n          <ListItem button component={NavLink} to='/about'>\r\n            <ListItemText primary=\"Information\" />\r\n          </ListItem>\r\n        </List>\r\n      </Toolbar>\r\n    </Appbar>\r\n  )\r\n}","import {createContext} from 'react'\r\n\r\nexport const AlertContext = createContext()","import {createContext} from 'react'\r\n\r\nexport const GithubContext = createContext()","import React, {useContext, useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport { AlertContext } from '../context/alert/alertContext';\r\nimport { GithubContext } from '../context/github/githubContext';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '30px 4px',\r\n    width: 500,\r\n    margin: '0 auto',\r\n  },\r\n}));\r\n\r\nexport const Search = () => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = useState('')\r\n  const alert = useContext(AlertContext)\r\n  const github = useContext(GithubContext)\r\n\r\n  const onSubmit = event => {\r\n    \r\n    if (event.key !== 'Enter') {\r\n      return\r\n    }\r\n\r\n    github.clearUsers()\r\n\r\n    if (value.trim()) {\r\n      alert.hide()\r\n      github.search(value.trim())\r\n    } else {\r\n      alert.show(\"Enter data user\")\r\n    }\r\n  }\r\n  return (\r\n    <form className={classes.root} onSubmit={(event) => event.preventDefault()}>\r\n      <Input\r\n      placeholder=\"Enter nickname user...\" \r\n      fullWidth\r\n      color='secondary'\r\n      value={value}\r\n      onChange={event => setValue(event.target.value)}\r\n      onKeyPress={onSubmit}\r\n      />\r\n    </form>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '65%',\r\n    height: '140px'\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport const Cardd = ({user}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.cardMedia}\r\n        image={user.avatar_url}\r\n        title={user.login}\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {user.login}\r\n        </Typography>\r\n        \r\n      </CardContent>\r\n      <CardActions>\r\n        <Button variant=\"outlined\" color=\"primary\" component={Link} to={'/profile/' + user.login}>\r\n          Open\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Search } from '../components/Search'\r\nimport { Cardd } from '../components/Card'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useContext } from 'react';\r\nimport { GithubContext } from '../context/github/githubContext';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nexport const Home = () => {\r\n  const classes = useStyles();\r\n  const { loading, users } = useContext(GithubContext)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={3}>\r\n          {loading\r\n            ? <CircularProgress size={80} style={{margin: '0 auto'}}/>\r\n            : users.map(user => (\r\n              <Grid item xs={12} sm={6} md={4} key={user.id}>\r\n                <Cardd user={user} />\r\n              </Grid>\r\n            )\r\n            )\r\n          }\r\n        </Grid>\r\n      </Container>\r\n\r\n    </Fragment>\r\n  )\r\n}","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const About = () => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '300px', marginTop: '30px', padding: '20px' }}\r\n         variant=\"h1\">\r\n          About page\r\n          <Typography variant=\"h5\">Version 1.0.0</Typography>\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport const Repos = ({repos}) => {\r\n  const classes = useStyles();\r\n  return (\r\n  <React.Fragment>\r\n    {\r\n      repos.map(repo => (\r\n        <Card className={classes.card} key={repo.id}>\r\n          <CardContent className={classes.cardContent}>\r\n            \r\n              <Link href={repo.html_url}>\r\n                {repo.name}\r\n              </Link>\r\n            \r\n          </CardContent>\r\n        </Card>\r\n      ))\r\n    }\r\n  </React.Fragment>\r\n  )\r\n}","import React, { useContext, useEffect, Fragment } from 'react'\r\nimport {GithubContext} from '../context/github/githubContext'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { List, ListItemText } from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Repos } from '../components/Repos';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 445,\r\n    margin: '20px auto'\r\n  },\r\n  media: {\r\n    height: 440\r\n  },\r\n});\r\n\r\nexport const Profile = ({match}) => {\r\n  const classes = useStyles();\r\n  const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\r\n  const urlName = match.params.name\r\n\r\n  useEffect(() => {\r\n    getUser(urlName)\r\n    getRepos(urlName)\r\n    // eslint-disable-next-line \r\n  }, [])\r\n  \r\n  if (loading) {\r\n    return <CircularProgress size={80} style={{ margin: '0 auto' }} />\r\n  }\r\n\r\n  const {\r\n    name, company, avatar_url,\r\n    location, bio, blog,\r\n    login, html_url, followers,\r\n    following,\r\n    public_repos, public_gists\r\n  } = user\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.root}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            image={avatar_url}\r\n            title={name}\r\n          />\r\n        \r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n          </Typography>\r\n            {location &&\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Location: {location}\r\n          </Typography>}\r\n          {\r\n            bio && <Fragment>\r\n              <h4>BIO</h4>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          }\r\n          <Button variant=\"outlined\" href={html_url}>Open profile</Button>\r\n          <List>\r\n            {login && \r\n            <ListItemText>\r\n             <strong>Username: </strong> {login}\r\n            </ListItemText>}\r\n            {company &&\r\n              <ListItemText>\r\n                <strong>Company: </strong> {company}\r\n              </ListItemText>}\r\n            {blog &&\r\n              <ListItemText>\r\n                <strong>Website: </strong> {blog}\r\n              </ListItemText>}\r\n          </List>\r\n          <Chip\r\n            label={`Followers: ${followers}`}\r\n            color=\"primary\"\r\n          />\r\n          <Chip\r\n            label={`Following: ${following}`}\r\n            color='secondary'\r\n          />\r\n          <Chip\r\n            label={`Repos: ${public_repos}`}\r\n            style={{ backgroundColor: '#9c27b0', color: '#fff'}}\r\n          />\r\n          <Chip\r\n            label={`Gists: ${public_gists}`}\r\n            style={{ backgroundColor: '#009688', color: '#fff' }}\r\n          />\r\n          </CardContent>\r\n      </Card>\r\n      <Repos repos={repos}/>\r\n    </Fragment>\r\n  )\r\n}","import React, {useContext} from 'react'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AlertContext } from '../context/alert/alertContext';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport const Alertt = () => {\r\n  const classes = useStyles();\r\n\r\n  const {alert, hide} = useContext(AlertContext)\r\n\r\n  if (!alert) return null\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert onClose={hide} severity=\"error\">\r\n        {alert.text}\r\n      </Alert>\r\n    </div>\r\n  )\r\n}","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, action) => action.payload,\r\n  [HIDE_ALERT]: () => null,\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'\r\n","import React, {useReducer} from 'react'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\n\r\nexport const AlertState = ({children}) => {\r\n  const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n  const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n  const show = (text) => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: {text}\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider value={{\r\n      hide, show, alert: state\r\n    }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  )\r\n}","import { SEARCH_USERS, GET_REPOS, GET_USER, SET_LOADING, CLEAR_USERS } from \"../types\"\r\n\r\nconst handlers = {\r\n  [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n  [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\r\n  [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\r\n  [SET_LOADING]: state => ({...state, loading: true}),\r\n  [CLEAR_USERS]: state => ({...state, users: []}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}","import React, {useReducer} from 'react'\r\nimport axios from 'axios'\r\nimport { GithubContext } from './githubContext'\r\nimport { githubReducer } from './githubReducer'\r\nimport { SEARCH_USERS, GET_USER, GET_REPOS, CLEAR_USERS, SET_LOADING } from '../types'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\nexport const GithubState = ({children}) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: []\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n  const search = async value => {\r\n    setLoading()\r\n    \r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n    )\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: response.data.items\r\n    })\r\n  }\r\n\r\n  const getUser = async name => {\r\n    setLoading()\r\n    \r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}?`)\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: response.data\r\n    })\r\n  }\r\n\r\n  const getRepos = async name => {\r\n    setLoading()\r\n    \r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: response.data\r\n    })\r\n  }\r\n\r\n  const clearUsers = () => dispatch({type: CLEAR_USERS})\r\n  const setLoading = () => dispatch({type: SET_LOADING})\r\n\r\n  const {user, users, repos, loading} = state\r\n\r\n  return (\r\n    <GithubContext.Provider value={{\r\n      setLoading, search, getUser, getRepos, clearUsers,\r\n      user, users, repos, loading\r\n    }}>\r\n      {children}\r\n    </GithubContext.Provider>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Navbar } from './components/Navbar'\nimport { Home } from './pages/Home'\nimport { About } from './pages/About'\nimport { Profile } from './pages/Profile'\nimport { Alertt } from './components/Alert';\nimport { AlertState } from './context/alert/AlertState';\nimport { GithubState } from './context/github/GithubState';\n\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <HashRouter basename='/'>\n          <Navbar />\n          <Alertt alert={{ text: \"Test alert\" }} />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/profile/:name\" component={Profile} />\n          </Switch>\n        </HashRouter>\n      </AlertState>\n    </GithubState>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}